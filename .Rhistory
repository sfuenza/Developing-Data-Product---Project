library(shiny)
shiny::runApp()
USArrests
summary(USArrests)
names(USArrests)
row_names(USArrests)
str(USArrests)
View(USArrests)
states_map<-map_data("states")
library(ggplot2)
library(data.table)
library(maps)
install.packages("maps")
library(maps)
library(rCharts)
install.packages("reshape2")
USAccDeaths
USArrests
row.names(USArrests)
states_map<-map_data("state")
library(maps)
states_map<-map_data("state")
library(ggplot2)
states_map<-map_data("state")
arrests<-USArrests
p <- ggplot(arrests, aes(map_id = row.names(arrests)))
p <- p + geom_map(aes(fill = Affected), map = states_map, colour='black') + expand_limits(x = states_map$long, y = states_map$lat)
p <- p + coord_map() + theme_bw()
p <- p + labs(x = "Long", y = "Lat", title = title)
install.packages("mapproj")
library(mapproj)
p <- ggplot(arrests, aes(map_id = row.names(arrests)))
p <- p + geom_map(aes(fill = Affected), map = states_map, colour='black') + expand_limits(x = states_map$long, y = states_map$lat)
p <- p + coord_map() + theme_bw()
p <- p + labs(x = "Long", y = "Lat", title = title)
p
p <- ggplot(arrests, aes(map_id = row.names(arrests)))
p <- p + geom_map(aes(fill = Murder), map = states_map, colour='black') + expand_limits(x = states_map$long, y = states_map$lat)
p <- p + coord_map() + theme_bw()
p <- p + labs(x = "Long", y = "Lat", title = title)
p
v<-row.names(arrests)
p <- ggplot(arrests, aes(map_id = row.names(arrests)))
p <- p + geom_map(aes(fill = Murder), map = states_map, colour='black') + expand_limits(x = states_map$long, y = states_map$lat)
p <- p + coord_map() + theme_bw()
p <- p + labs(x = "Long", y = "Lat", title = title)
p <- ggplot(arrests, aes(map_id = v))
p <- p + geom_map(aes(fill = Murder), map = states_map, colour='black') + expand_limits(x = states_map$long, y = states_map$lat)
p <- p + coord_map() + theme_bw()
p <- p + labs(x = "Long", y = "Lat", title = title)
p
View(v)
v
p <- ggplot(data, aes(map_id = STATE))
p <- ggplot(data, aes(map_id = v))
p <- ggplot(arrests, aes(map_id = v))
p
p <- p + geom_map(aes(fill = Affected), map = states_map, colour='black') + expand_limits(x = states_map$long, y = states_map$lat)
p
p <- p + geom_map(aes(fill = Murder), map = states_map, colour='black') + expand_limits(x = states_map$long, y = states_map$lat)
p
title <- paste("Population impact","(number of affected)")
p <- ggplot(arrests, aes(map_id = v))
p <- p + geom_map(aes(fill = Murder), map = states_map, colour='black') + expand_limits(x = states_map$long, y = states_map$lat)
p
p <- p + coord_map() + theme_bw()
p
arrests$STATE<-row.names(arrests)
p <- ggplot(arrests, aes(map_id = STATE))
p <- p + geom_map(aes(fill = Assault), map = states_map, colour='black') + expand_limits(x = states_map$long, y = states_map$lat)
p <- p + coord_map() + theme_bw()
p <- p + labs(x = "Long", y = "Lat", title = title)
print(p)
zoo
unique(states_map$region)
v
ar2<-arrests[,!row.names(arrests)=="Alaska"]
ar2<-arrests[!row.names(arrests)=="Alaska",]
p <- ggplot(arrests, aes(map_id = STATE))
p <- p + geom_map(aes(fill = Assault), map = states_map, colour='black') + expand_limits(x = states_map$long, y = states_map$lat)
p <- p + coord_map() + theme_bw()
p <- p + labs(x = "Long", y = "Lat", title = title)
print(p)
plot(p)
p <- ggplot(arrests, aes(map_id = region))
p <- p + geom_map(aes(fill = Assault), map = states_map, colour='black') + expand_limits(x = states_map$long, y = states_map$lat)
p <- p + coord_map() + theme_bw()
p <- p + labs(x = "Long", y = "Lat", title = title)
print(p)
p <- ggplot(arrests, aes(map_id = STATE))
p <- p + geom_map(aes(fill = Assault), map = states_map, colour='black') + expand_limits(x = states_map$long, y = states_map$lat)
p <- p + coord_map() + theme_bw()
p <- p + labs(x = "Long", y = "Lat", title = title)
plot(p)
p <- ggplot(arrests, aes(map_id = STATE))
p <- p + geom_map(aes(fill = Assault), map = states_map, colour='black')+ expand_limits(x = states_map$long, y = states_map$lat)
p
p <- p + coord_map() + theme_bw()
p
plot(states_map)
p <- ggplot(states_map, aes(map_id = region))
p
p <- p + geom_map(map = states_map, colour='black')+ expand_limits(x = states_map$long, y = states_map$lat)
p <- p + coord_map() + theme_bw()
p
p <- p + geom_map(aes(fill = group), map = states_map, colour='black')+ expand_limits(x = states_map$long, y = states_map$lat)
p
p <- ggplot(ar2)
p <- p + geom_map(aes(fill = Murder), map = states_map, colour='black') + expand_limits(x = states_map$long, y = states_map$lat)
p <- p + coord_map() + theme_bw()
p <- p + labs(x = "Long", y = "Lat", title = title)
p
p <- ggplot(ar2, aes(map_id=state))
p <- p + geom_map(aes(fill = Murder), map = states_map, colour='black') + expand_limits(x = states_map$long, y = states_map$lat)
p <- p + coord_map() + theme_bw()
p <- p + labs(x = "Long", y = "Lat", title = title)
p
ar2$state<-ar2$STATE
p <- ggplot(ar2, aes(map_id=state))
p <- p + geom_map(aes(fill = Murder), map = states_map, colour='black') + expand_limits(x = states_map$long, y = states_map$lat)
p <- p + coord_map() + theme_bw()
p <- p + labs(x = "Long", y = "Lat", title = title)
p
ar2[region=="Alabama",]$region<-"alabama"
ar2[state.abb=="Alabama",]$state<-"alabama"
ar2[state.abb=="Alabama",]
ar2[state=="Alabama",]
ar2[ar2$state=="Alabama",]
ar2[ar2$state=="Alabama",]$state<-"alabama"
ar2[ar2$state=="Alabama",]
ar2[ar2$state=="alabama",]
p <- ggplot(ar2, aes(map_id=state))
p <- p + geom_map(aes(fill = Murder), map = states_map, colour='black') + expand_limits(x = states_map$long, y = states_map$lat)
p <- p + coord_map() + theme_bw()
p <- p + labs(x = "Long", y = "Lat", title = title)
p
ar2[ar2$state=="Arizona",]$state<-"arizona"
p <- ggplot(ar2, aes(map_id=state))
p <- p + geom_map(aes(fill = Murder), map = states_map, colour='black') + expand_limits(x = states_map$long, y = states_map$lat)
p <- p + coord_map() + theme_bw()
p <- p + labs(x = "Long", y = "Lat", title = title)
p
library(xlsx)
write.table(USArrests, "data/USArrests.xlsx")
write.csv(USArrests, "USArrests.csv")
write.csv(USArrests,file="USArrests.csv")
data<-read.csv("data/USArrests.csv",header=TRUE)
data<-read.csv("data/USArrests.csv",header=TRUE,sep=";")
library(shiny)
library(ggplot2)
library(maps)
library(rCharts)
library(mapproj)
map_of_states<-map_data("state")
unique(map_of_states$region)
data<-read.csv("data/USArrests.csv",header=TRUE,sep=";")
shiny::runApp()
states<-arrests$State
states<-data$State
states[1]
states<-as.character(arrests$State)
states<-as.character(data$State)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
text<-"Murder"
title=paste("NÂ° of arrests for "+text+" per 100.000 residents in 1973 by States")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp(display.mode='showcase')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
text<-"Murder"
data$text
shiny::runApp()
temp<-data
temp$Murder<-NA
length(is.na(data$Murder))
shiny::runApp()
temp[1,]$Murder<-1
length(is.na(data$Murder))
length(is.na(temp$Murder))
summary(temp)
temp$Murder
is.na(temp$Murder)
sum(is.na(temp$Murder))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
states
north_states<-c("washington","oregon","idaho","montana","wyoming","north dakota","south dakota","nebraska","minnesota",
"iowa","wisconsin","illinois","michigan","indiana","ohio","pennsylvania","new jersey","connecticut",
"rhode island","massachusetts","new hampshire","vermont","maine","new york")
south_states<--which(states %in% north_states)
south_states<- states[-which(states %in% north_states)]
west_states<-c("wahsington","oregon","idaho","montana","wyoming","california","hawaii","nevada","arizona","utah",
"colorado","new mexico")
central_states<-c("north dakota","south dakota","nebraska","minnesota","iowa","wisconsin","illinois", "kansas",
"missouri","oklahoma","arkansas","texas","louisiana")
lll<-west_states+central_states
east_states<-states[-which(states %in% c(west_states,central_states))]
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
arrests[which(arrests$States %in% north_states,]$North_South<-"North"
arrests[,which(arrests$States %in% north_states]$North_South<-"North"
arrests[,which(arrests$State %in% north_states]$North_South<-"North"
arrests[which(arrests$State %in% north_states),]$North_South<-"North"
data[which(data$State %in% north_states),]$North_South<-"North"
which(data$State %in% north_states)
data[,which(data$State %in% north_states)]$North_South<-"North"
data[which(data$State %in% north_states),]$North_South
data$North_South<-NA
data[,which(data$State %in% north_states)]$North_South<-"North"
data[which(data$State %in% north_states),]$North_South<-"North"
data$West_Central_East<-"East"
data[which(data$State %in% west_states),]$West_Central_South<-"West"
data[which(data$State %in% central_states),]$West_Central_South<-"Central"
arrests[which(arrests$State %in% west_states),]$West_Central_East<-"West"
arrests[which(arrests$State %in% central_states),]$West_Central_East<-"Central"
data[which(data$State %in% west_states),]$West_Central_East<-"West"
data[which(data$State %in% central_states),]$West_Central_East<-"Central"
data$North_South<-"South"
data[which(data$State %in% north_states),]$North_South<-"North"
murders<-aggregate(x=data$Murder, by=data$North_South,FUN=sum)
murders<-aggregate(x=data$Murder, by=list(data$North_South),FUN=sum)
murders
murders<-aggregate(x=data$Murder, by=list(data$West_Central_East),FUN=sum)
murders
murders<-aggregate(.~data$North_South+data$West_Central_East,data=data$Murder, by=list(data$West_Central_East),FUN=sum)
murders<-aggregate(Murder ~ North_South+West_Central_East,data=data,FUN=sum)
murders
murders$Zone<-murders$North_South
murders$Zone<-paste(murders$North_South, murders$West_Central_East)
murders
murders$North_South<-NULL
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
rm(murders)
murders<-aggregate(x=data$Murder, by=list(data$North_South),FUN=sum)
murders
shiny::runApp()
names(murders)<-c("Zone","Murder")
murders<-aggregate(x=data$Murder, by=list(data$West_Central_East),FUN=sum)
names(murders)<-c("Zone","Murder")
murders<-aggregate(Murder ~ North_South+West_Central_East,data=data,FUN=sum)
murders<-aggregate(Murder ~ North_South,data=data,FUN=sum)
murders<-aggregate(Murder ~ North_South+West_Central_East,data=data,FUN=sum)
murders$Zone<-paste(murders$Group.1, murders$Group.2)
murders$Zone<-paste(murders$North_South, murders$West_Central_East)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
plot("fig/murder1.html")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
